---
- name: Get latest released version
  uri:
    url: https://api.github.com/repos/slackhq/nebula/releases/latest
    follow_redirects: all
  register: nebula_latest_json
  changed_when: false

- name: "Fail when Nebula Install File can't be identified"
  fail:
    msg: Could not find the Nebula install files
  when:
  - nebula_latest_json.json is not defined
  - nebula_latest_json.json.assets is not defined
  - nebula_latest_json.json is string
  - nebula_latest_json.json is not iterable

- name: Set Nebula Install file URL
  set_fact:
    nebula_download_url: |-
      {%- for item in nebula_latest_json.json.assets -%}
        {%- if item.name == 'nebula-linux-amd64.tar.gz' -%}
          {{ item.browser_download_url }}
        {%- endif -%}
      {%- endfor -%}

- name: Unpack Nebula Install File
  unarchive:
    src: "{{ nebula_download_url }}"
    dest: /usr/sbin
    remote_src: yes
    owner: root
    group: root
  become: yes

- name: Create Nebula Config directory
  file:
    state: directory
    path: /etc/nebula
    owner: root
    group: root
  when: nebula_key is defined or nebula_cert is defined or nebula_ca is defined

- name: Create Nebula Key Materials
  copy:
    content: "{{ item.value }}"
    dest: "/etc/nebula/{{ item.key }}"
    owner: root
    group: root
    mode: "0600"
  when: item.value | length > 0
  loop:
  - key: ca.crt
    value: "{{ nebula_ca | default('') }}"
  - key: host.crt
    value: "{{ nebula_cert | default('') }}"
  - key: host.key
    value: "{{ nebula_key | default('') }}"
  - key: ca.crt
    value: "{{ nebula_ca | default('') }}"
  loop_control:
    label: "{{ item.key }}"
  notify: Restart Nebula

- name: Create Nebula Config File
  template:
    src: config.yml
    dest: /etc/nebula/config.yml
    owner: root
    group: root
    mode: "0600"
  when: nebula_lighthouses is defined
  notify: Restart Nebula

- name: Install Nebula SystemD Service File
  copy:
    src: nebula.service
    dest: /etc/systemd/system/nebula.service
    owner: root
    group: root
    mode: "0644"
  when: nebula_key is defined and nebula_cert is defined and nebula_ca is defined and nebula_lighthouses is defined
  notify: Restart Nebula
